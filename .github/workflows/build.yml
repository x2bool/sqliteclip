name: Build

on:
  push:
    branches: [ "master" ]
    tags: ["v*"]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux-x64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Bindgen
      run: rustup toolchain install nightly && rustup run nightly cbindgen --config cbindgen.toml
    - name: Build debug
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Build release
      run: cargo build --release
    - uses: actions/upload-artifact@v3
      with:
        name: linux-x64
        path: target/release/libsqliteclip.so

  build-linux-x86:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install target
      run: sudo apt install -y gcc-multilib && rustup target install i686-unknown-linux-gnu
    - name: Bindgen
      run: rustup toolchain install nightly && rustup run nightly cbindgen --config cbindgen.toml
    - name: Build release
      run: cargo build --release --target=i686-unknown-linux-gnu
    - uses: actions/upload-artifact@v3
      with:
        name: linux-x86
        path: target/i686-unknown-linux-gnu/release/libsqliteclip.so

  build-linux-aarch64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install target
      run: sudo apt install -y gcc-aarch64-linux-gnu && rustup target install aarch64-unknown-linux-gnu
    - name: Bindgen
      run: rustup toolchain install nightly && rustup run nightly cbindgen --config cbindgen.toml
    - name: Build release
      run: cargo build --release --target=aarch64-unknown-linux-gnu
    - uses: actions/upload-artifact@v3
      with:
        name: linux-aarch64
        path: target/aarch64-unknown-linux-gnu/release/libsqliteclip.so

  build-windows-x64:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build debug
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Build release
      run: cargo build --release
    - uses: actions/upload-artifact@v3
      with:
        name: windows-x64
        path: target/release/sqliteclip.dll

  build-windows-x86:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install target
      run: rustup target add i686-pc-windows-msvc
    - name: Build release
      run: cargo build --release --target=i686-pc-windows-msvc
    - uses: actions/upload-artifact@v3
      with:
        name: windows-x86
        path: target/i686-pc-windows-msvc/release/sqliteclip.dll

  build-macos-x64:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build debug
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Build release
      run: cargo build --release
    - uses: actions/upload-artifact@v3
      with:
        name: macos-x64
        path: target/release/libsqliteclip.dylib

  build-macos-aarch64:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install target
      run: rustup target add aarch64-apple-darwin
    - name: Build release
      run: cargo build --release --target=aarch64-apple-darwin
    - uses: actions/upload-artifact@v3
      with:
        name: macos-aarch64
        path: target/aarch64-apple-darwin/release/libsqliteclip.dylib

  create-release:

    if: startsWith(github.ref, 'refs/tags/v')
    needs:
    - build-linux-x64
    - build-linux-x86
    - build-linux-aarch64
    - build-windows-x64
    - build-windows-x86
    - build-macos-x64
    - build-macos-aarch64
    runs-on: ubuntu-latest

    steps:
    - name: Add current date to env
      run: echo "RELEASE_DATE=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
    - uses: actions/download-artifact@v3
      with:
        path: .
    - name: Archive linux-x64
      run: mv linux-x64/libsqliteclip.so ./libsqliteclip.so && tar -zcvf libsqliteclip-linux-x64.tar.gz libsqliteclip.so && rm libsqliteclip.so
    - name: Archive linux-x86
      run: mv linux-x86/libsqliteclip.so ./libsqliteclip.so && tar -zcvf libsqliteclip-linux-x86.tar.gz libsqliteclip.so && rm libsqliteclip.so
    - name: Archive linux-aarch64
      run: mv linux-aarch64/libsqliteclip.so ./libsqliteclip.so && tar -zcvf libsqliteclip-linux-aarch64.tar.gz libsqliteclip.so && rm libsqliteclip.so
    - name: Archive windows-x64
      run: mv windows-x64/sqliteclip.dll ./sqliteclip.dll && zip sqliteclip-windows-x64.zip sqliteclip.dll && rm sqliteclip.dll
    - name: Archive windows-x86
      run: mv windows-x86/sqliteclip.dll ./sqliteclip.dll && zip sqliteclip-windows-x86.zip sqliteclip.dll && rm sqliteclip.dll
    - name: Archive macos-x64
      run: mv macos-x64/libsqliteclip.dylib ./libsqliteclip.dylib && zip libsqliteclip-macos-x64.zip libsqliteclip.dylib && rm libsqliteclip.dylib
    - name: Archive macos-aarch64
      run: mv macos-aarch64/libsqliteclip.dylib ./libsqliteclip.dylib && zip libsqliteclip-macos-aarch64.zip libsqliteclip.dylib && rm libsqliteclip.dylib

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: Release ${{ github.ref }} ${{ env.RELEASE_DATE }}
        draft: false
        prerelease: true

    - name: Upload linux-x64 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libsqliteclip-linux-x64.tar.gz
        asset_name: libsqliteclip-linux-x64.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload linux-x86 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libsqliteclip-linux-x86.tar.gz
        asset_name: libsqliteclip-linux-x86.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload linux-aarch64 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libsqliteclip-linux-aarch64.tar.gz
        asset_name: libsqliteclip-linux-aarch64.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload windows-x64 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./sqliteclip-windows-x64.zip
        asset_name: sqliteclip-windows-x64.zip
        asset_content_type: application/octet-stream

    - name: Upload windows-x86 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./sqliteclip-windows-x86.zip
        asset_name: sqliteclip-windows-x86.zip
        asset_content_type: application/octet-stream

    - name: Upload macos-x64 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libsqliteclip-macos-x64.zip
        asset_name: libsqliteclip-macos-x64.zip
        asset_content_type: application/octet-stream

    - name: Upload macos-aarch64 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libsqliteclip-macos-aarch64.zip
        asset_name: libsqliteclip-macos-aarch64.zip
        asset_content_type: application/octet-stream
